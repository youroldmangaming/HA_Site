
# GALERA MYSQL FRONTEND (TCP)
#frontend mysql_frontend
#    bind *:3306
#    mode tcp
#    default_backend galera_backend

# GALERA BACKEND (TCP)
#backend galera_backend
#    mode tcp
#    balance leastconn
#    option mysql-check user haproxy_check
#    server galera1 192.168.188.52:3306 check inter 2s rise 2 fall 3
#    server galera2 192.168.188.39:3306 check inter 2s rise 2 fall 3
#    server galera3 192.168.188.33:3306 check inter 2s rise 2 fall 3
#    server galera4 192.168.188.32:3306 check inter 2s rise 2 fall 3


####


# On rpi1 - generate the certificate

#sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
#  -keyout /tmp/haproxy.key -out /tmp/haproxy.crt

# Combine for HAProxy
#sudo cat /tmp/haproxy.crt /tmp/haproxy.key | sudo tee /tmp/haproxy.pem

# Copy to rpi2 (replace with rpi2's IP)
#scp /tmp/haproxy.pem user@192.168.188.xxx:/tmp/

# On rpi2 - move to proper location
#sudo mv /tmp/haproxy.pem /etc/ssl/private/
#sudo chmod 600 /etc/ssl/private/haproxy.pem
#sudo chown root:root /etc/ssl/private/haproxy.pem

####


global
    log /dev/log    local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    maxconn 4096
    tune.ssl.default-dh-param 2048

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # SSL configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000

# STATS INTERFACE
frontend stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats hide-version

# WEB FRONTEND (HTTP) - Works without SSL
frontend web_frontend
    bind *:80
    mode http
    default_backend web_backend

# WEB FRONTEND (HTTPS) - Uncomment when SSL cert is ready
 frontend web_frontend_ssl
     bind *:443 ssl crt /etc/ssl/private/haproxy.pem
     mode http
     default_backend web_backend

# WEB BACKEND
backend web_backend
    mode http
    balance roundrobin
    option httpchk GET /
    server web_rpi1 192.168.188.52:8080 check inter 2s rise 2 fall 3
    server web_rpi2 192.168.188.39:8080 check inter 2s rise 2 fall 3
    server web_rpi3 192.168.188.33:8080 check inter 2s rise 2 fall 3
    server web_rpi4 192.168.188.32:8080 check inter 2s rise 2 fall 3
